"""
Parsa et al., 2016, MNRAS, 456, 3194

Table 2.
"""

import numpy as np

info = \
{
 'reference': 'Parsa et al., 2016, MNRAS, 456, 3194',
 'data': 'Table 2', 
}

redshifts = [1.9, 2.8, 3.8]
wavelength = 1500.

ULIM = -1e10

tmp_data = {}
tmp_data['lf'] = \
{
 1.9: {'M': list(np.arange(-22, -14, 0.5)),
       'phi': [0.000012, 0.000034, 0.000152, 0.000555, 0.001654, 0.003467,
               0.004961, 0.006454, 0.007849, 0.010007, 0.012560, 0.01432,
               0.017660, 0.018052, 0.030077, 0.033572],
       'err': [0.000027, 0.000045, 0.000094, 0.000181, 0.000124, 0.000165,
               0.000197, 0.000225, 0.000869, 0.000981, 0.001099, 0.001173,
               0.001303, 0.001317, 0.001505, 0.001251],           
      },
 2.8: {'M': list(np.arange(-22.5, -15, 0.5)),
        'phi': [0.000003, 0.000023, 0.000117, 0.000462, 0.001462, 0.002511,
                0.003830, 0.004387, 0.007382, 0.008353, 0.012432, 0.012238,
                0.012821, 0.015599, 0.014625],
        'err': [0.000001, 0.000004, 0.000008, 0.000016, 0.000107, 0.000140,
                0.000173, 0.000185, 0.000838, 0.000892, 0.001088, 0.001079,
                0.001105, 0.001216, 0.000971],           
       },                    
 3.8: {'M': list(np.arange(-23, -15.5, 0.5)),
        'phi': [0.000001, 0.000010, 0.000043, 0.000154, 0.000475, 0.001087,
                0.001709, 0.001916, 0.002110, 0.004008, 0.005485, 0.007384,
                0.016030, 0.010337, 0.013510],
        'err': [ULIM, 0.000002, 0.000005, 0.000010, 0.000017, 0.000096, 
                0.000120, 0.000127, 0.000467, 0.000644, 0.000753,
                0.000874, 0.001095, 0.001034, 0.000850],           
       },
}

units = {'lf': 1., 'wavelength': 1500.}

data = {}
data['lf'] = {}
for key in tmp_data['lf']:
    N = len(tmp_data['lf'][key]['M'])
    mask = np.array([tmp_data['lf'][key]['err'][i] == ULIM for i in range(N)])
    
    #mask = []
    #for element in tmp_data['lf'][key]['err']:
    #    if element == ULIM:
    #        mask.append(1)
    #    else:
    #        mask.append(0)
    #
    #mask = np.array(mask)
    
    data['lf'][key] = {}
    data['lf'][key]['M'] = np.ma.array(tmp_data['lf'][key]['M'], mask=mask) 
    data['lf'][key]['phi'] = np.ma.array(tmp_data['lf'][key]['phi'], mask=mask) 
    data['lf'][key]['err'] = tmp_data['lf'][key]['err']



