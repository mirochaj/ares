"""
Duncan et al., 2014, MNRAS, 444, 2960
"""

import numpy as np

info = \
{
 'reference': 'Duncan et al., 2014, MNRAS, 444, 2960',
 'data': 'http://dunkenj.github.io/#data', 
 'imf': ('chabrier', (0.1, 100.)),
 'other': 'data from http://dunkenj.github.io/#data',
 'label': 'Duncan+ (2014)',
}

redshifts = [4, 5, 6, 7]


ULIM = -1e10

fits = {}

# Table 2
tmp_data = {}
tmp_data['smf'] = \
{
 4: {'M': list(10**np.arange(8.625, 11.375+0.25, 0.25)),
     'phi': [0.0173, 0.0124, 0.00768, 0.00425, 0.00246, 0.00109, 0.000608,
             0.000337, 8.07e-05, 3.42e-05, 9.69e-08, 3.52e-21],
     'lim': [0.00347, 0.00185, 0.000812, 0.000414, 0.000263, 0.000167,
             0.000114, 0.000106, 4.45e-05, 2.99e-05, 9.68e-08, 3.51e-21],
     'err': [0.00359, 0.00185, 0.000838, 0.000416, 0.000265, 0.000162, 0.000112, 
             9.7e-05, 4.48e-05, 3e-05, 1.63e-05, 0.000213],       
    },
 5: {'M': list(10**np.array([8.719, 9.031, 9.344, 9.656, 9.969, 10.281,
        10.594, 10.906, 11.219])),
     'phi': [0.00995, 0.00439, 0.00238, 0.00137, 0.00103, 0.000415, 0.000124, 
         3.84e-05, 5.44e-06],
     'lim': [0.00439, 0.00129, 0.000691, 0.000356, 0.000437, 0.000186, 5.08e-05, 
         3.02e-05, 5.43e-06],
     'err': [0.00387, 0.00123, 0.000654, 0.000338, 0.000303, 0.000161, 5.08e-05, 
         3.05e-05, 1.78e-05],
    },    
 6: {'M': list(10**np.array([8.964, 9.321, 9.679, 10.036, 10.393, 10.750, 11.107])),
     'phi': [0.00277, 0.00116, 0.00043, 0.000217, 0.000102, 1.5e-05, 1.83e-06],
     'lim': [0.000827, 0.000353, 0.000134, 8.26e-05, 7.55e-05, 1.5e-05, 1.83e-06],
     'err': [0.000794, 0.000352, 0.000137, 8.2e-05, 7.54e-05, 2.3e-05, 2.95e-05],
    },
 7: {'M': list(10**np.array([9.321, 9.679, 10.036, 10.393, 10.750])),
     'phi': [0.000917, 0.000364, 0.000177, 3.6e-05, 4.22e-07],
     'lim': [0.000752, 0.000362, 0.000177, 3.59e-05, 4.21e-07],
     'err': [0.000352, 0.000137, 8.2e-05, 7.54e-05, 2.3e-05],
    },
}

units = {'smf': 1.}

data = {}
data['smf'] = {}
for key in tmp_data['smf']:
    mask = []
    for i, element in enumerate(tmp_data['smf'][key]['phi']):
        if element < 1e-15:
            mask.append(1)
        #elif element < tmp_data['smf'][key]['lim']
        #
        #ULIM
        else:
            mask.append(0)
    
    mask = np.array(mask)
    
    data['smf'][key] = {}
    data['smf'][key]['M'] = np.ma.array(tmp_data['smf'][key]['M'], mask=mask) 
    data['smf'][key]['phi'] = np.ma.array(tmp_data['smf'][key]['phi'], mask=mask) 
    data['smf'][key]['err'] = tmp_data['smf'][key]['err']

