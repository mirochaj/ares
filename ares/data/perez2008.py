"""
Perez-Gonzalez, P. G., et al. 2008, ApJ, 675, 234

For smf_tot, values are corrected as seen in Behroozi et al. 2013 (http://arxiv.org/abs/1207.6105), for D (Dust model) corrections.
"""

import numpy as np

info = \
{
 'reference':'',
 'data': '',
 'imf': ('chabrier', (0.1, 100.)), #didn't update this
}

redshifts = [0.3, 0.5, 0.7, 0.9, 1.15, 1.45]
wavelength = 1600. #mulit-wavelength

ULIM = -1e10 #or this

fits = {}

tmp_data = {}
tmp_data['smf_tot'] = \
{
 0.3: {'M': [1.9660157E+08, 3.0032189E+08, 4.5876153E+08, 7.0078854E+08, 1.0705008E+09, 1.6352607E+09, 2.4979687E+09, 3.8158122E+09, 5.8289052E+09,
           8.9040377E+09, 1.3601506E+10, 2.0777199E+10, 3.1738543E+10, 4.8482722E+10, 7.4060560E+10, 1.1313240E+11, 1.7281721E+11, 2.6398971E+11,
           4.0326171E+11],
    'phi': [-1.61682391444386, -1.72793799075166, -1.72929066618356, -1.86078782734556, -1.79070305046994, -1.90842909174537, -2.01462899969058,
           -2.03859620487415, -2.09279660087641, -2.21387292814723, -2.187096366056, -2.35584247976214, -2.43190196473906, -2.62627135188304,
           -2.77444558718996, -2.95812695329226, -3.42181700193836, -4.00379628901156, -5.00078782734556],
    'err': [(0.135, 0.15), (0.136, 0.151), (0.135, 0.151), (0.137, 0.153), (0.173, 0.2), (0.242, 0.212), (0.205, 0.243), (0.198, 0.234),
           (0.193, 0.226), (0.247, 0.306), (0.245, 0.302), (0.267, 0.336), (0.24, 0.294), (0.276, 0.35), (0.288, 0.37), (0.181, 0.211),
           (0.4, 9.999), (0.4, 5.95), (0.4, 4.953)]
   },
 0.5: {'M': [4.5876153E+08, 7.0078854E+08, 1.0705008E+09, 1.6352607E+09, 2.4979687E+09, 3.8158122E+09, 5.8289052E+09, 8.9040377E+09, 1.3601506E+10,
           2.0777199E+10, 3.1738543E+10, 4.8482722E+10, 7.4060560E+10, 1.1313240E+11, 1.7281721E+11, 2.6398971E+11, 4.0326171E+11],
    'phi': [-1.8924887364105, -1.85455548325369, -1.90889249759527, -2.00048270439484, -1.96880423848855, -2.07918764404631, -2.04286079662685,
           -2.18616869686543, -2.20407425849139, -2.15734643043998, -2.40954438822892, -2.54690708587042, -2.87576145073421, -3.27082196361559,
           -3.32979970735272, -3.85927463573594, -4.84878782734556],
    'err': [(0.109, 0.118), (0.095, 0.102), (0.113, 0.123), (0.114, 0.125), (0.128, 0.142), (0.118, 0.13), (0.138, 0.155), (0.136, 0.152),
           (0.157, 0.179), (0.155, 0.176), (0.187, 0.219), (0.208, 0.248), (0.271, 0.342), (0.316, 0.418), (0.175, 0.202), (0.248, 0.307),
           (0.4, 5.105)]
   },
 0.7: {'M': [1.0705008E+09, 1.6352607E+09, 2.4979687E+09, 3.8158122E+09, 5.8289052E+09, 8.9040377E+09, 1.3601506E+10, 2.0777199E+10, 3.1738543E+10,
           4.8482722E+10, 7.4060560E+10, 1.1313240E+11, 1.7281721E+11, 2.6398971E+11],
    'phi': [-1.9298817430367, -2.01705712731644, -2.0215044873566, -2.04893902500468, -2.03775230805267, -2.17088528576263, -2.22776817450367,
           -2.33434306425714, -2.43179863827262, -2.57720713614902, -2.78259017326247, -3.08191030195051, -3.56747127773948, -4.12823171260159],
    'err': [(0.244, 0.3), (0.153, 0.173), (0.12, 0.132), (0.098, 0.106), (0.093, 0.1), (0.105, 0.114), (0.107, 0.117), (0.116, 0.128),
           (0.134, 0.15), (0.15, 0.17), (0.198, 0.233), (0.274, 0.348), (0.296, 0.383), (0.225, 0.273)]
   },
 0.9: {'M': [1.6352607E+09, 2.4979687E+09, 3.8158122E+09, 5.8289052E+09, 8.9040377E+09, 1.3601506E+10, 2.0777199E+10, 3.1738543E+10, 4.8482722E+10,
           7.4060560E+10, 1.1313240E+11, 1.7281721E+11, 2.6398971E+11],
    'phi': [-2.05344639976413, -2.13317026496028, -2.19056289813067, -2.22660608517958, -2.30852784364304, -2.33251795568218, -2.50320307461562,
           -2.57843752169562, -2.6960591412142, -2.8678498695107, -3.04617968311067, -3.50510403521761, -4.02752949225022],
    'err': [(0.078, 0.083), (0.083, 0.088), (0.089, 0.095), (0.09, 0.096), (0.103, 0.112), (0.104, 0.113), (0.118, 0.13), (0.118, 0.13),
           (0.159, 0.181), (0.216, 0.259), (0.27, 0.341), (0.257, 0.321), (0.195, 0.23)]
   },
 1.15: {'M': [2.4979687E+09, 3.8158122E+09, 5.8289052E+09, 8.9040377E+09, 1.3601506E+10, 2.0777199E+10, 3.1738543E+10, 4.8482722E+10, 7.4060560E+10,
           1.1313240E+11, 1.7281721E+11, 2.6398971E+11, 4.0326171E+11],
    'phi': [-2.23815336133405, -2.25091970419836, -2.32762295532014, -2.43152762739108, -2.46774856131323, -2.53373907763252, -2.61491873045184,
           -2.76492861480263, -2.96395576857167, -3.28357822072348, -3.59922581116371, -4.04990014392819, -4.40492282730512],
    'err': [(0.076, 0.081), (0.08, 0.086), (0.089, 0.095), (0.096, 0.103), (0.098, 0.105), (0.104, 0.113), (0.121, 0.133), (0.155, 0.175),
           (0.173, 0.199), (0.265, 0.333), (0.312, 0.41), (0.306, 0.4), (0.4, 5.327)]
   },
 1.45: {'M': [5.8289052E+09, 8.9040377E+09, 1.3601506E+10, 2.0777199E+10, 3.1738543E+10, 4.8482722E+10, 7.4060560E+10, 1.1313240E+11, 1.7281721E+11,
           2.6398971E+11, 4.0326171E+11],
    'phi': [-2.5932721294186, -2.64296800433044, -2.69401009014588, -2.739586367901, -2.80905741009526, -2.97398957164515, -3.14251784326815,
           -3.26253140048154, -3.6194153931062, -4.4076200362268, -4.97550792593963],
    'err': [(0.103, 0.112), (0.106, 0.115), (0.117, 0.128), (0.127, 0.141), (0.136, 0.152), (0.143, 0.161), (0.18, 0.208), (0.256, 0.319),
           (0.281, 0.359), (0.4, 5.408), (0.4, 4.0)]
   },
}


tmp_data['smf_sf'] = \
{

}


tmp_data['smf_q'] = \
{

}


units = {'smf_tot': 'log10', 'smf_sf': 'log10', 'smf': 'log10', 'smf_q': 'log10'}

data = {}
data['smf_tot'] = {}
data['smf_sf'] = {}
data['smf_q'] = {}
for group in ['smf_tot', 'smf_sf', 'smf_q']:

    for key in tmp_data[group]:

        if key not in tmp_data[group]:
            continue

        subdata = tmp_data[group]

        mask = []
        for element in subdata[key]['err']:
            if element == ULIM:
                mask.append(1)
            else:
                mask.append(0)

        mask = np.array(mask)

        data[group][key] = {}
        data[group][key]['M'] = np.ma.array(subdata[key]['M'], mask=mask)
        data[group][key]['phi'] = np.ma.array(subdata[key]['phi'], mask=mask)
        data[group][key]['err'] = tmp_data[group][key]['err']

#default is the star-forming galaxies data only
data['smf'] = data['smf_tot']
